name: Image-Downloader
on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请填写docker镜像名称 多个用英文逗号分开'
        required: true
        default: 'alpine:latest'  # 设置默认的 Docker 镜像列表
      docker_platform:
        description: '镜像目标架构(amd64/arm64)'
        required: false
        default: 'amd64'

jobs:
  image_downloader:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Clean up Docker to free space
      run: |
          docker system prune -a -f
          docker volume prune -f

    - name: Pull Docker Images and Package
      run: |
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        images="${{ github.event.inputs.docker_images }}"
        img_platform="${{ github.event.inputs.docker_platform }}"
        IFS=',' read -r -a image_array <<< "$images"
        for image in "${image_array[@]}"; do
          docker pull "${image}" --platform "linux/${img_platform}"
          save_file="${image//\//_}-dl.tar"
          docker save "${image}" -o "${save_file}"
          gzip ${save_file}
        done

    - name: Compress the TAR files
      run: tar -cf pulled-images.tar *-dl.tar*

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-images-${{ env.FILE_DATE }}
        path: pulled-images.tar
        retention-days: 1  # 将保留天数设置为 1 天 最多可设置90天

    - name: Clean up intermediate files
      run: |
        rm *-dl.tar